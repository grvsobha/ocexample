{
  "apiVersion": "v1",
  "base_env": [
    {
      "name": "RAILS_ENV",
      "value": "production"
    },
    {
      "name": "DATABASE_URL",
      "value": "mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"
    },
    {
      "name": "FORCE_SSL",
      "value": "true"
    },
    {
      "name": "THREESCALE_SUPERDOMAIN",
      "value": "${WILDCARD_DOMAIN}"
    },
    {
      "name": "TENANT_NAME",
      "value": "${TENANT_NAME}"
    },
    {
      "name": "APICAST_ACCESS_TOKEN",
      "value": "${APICAST_ACCESS_TOKEN}"
    },
    {
      "name": "ADMIN_ACCESS_TOKEN",
      "value": "${ADMIN_ACCESS_TOKEN}"
    },
    {
      "name": "PROVIDER_PLAN",
      "value": "enterprise"
    },
    {
      "name": "USER_LOGIN",
      "value": "${ADMIN_USERNAME}"
    },
    {
      "name": "USER_PASSWORD",
      "value": "${ADMIN_PASSWORD}"
    },
    {
      "name": "RAILS_LOG_TO_STDOUT",
      "value": "true"
    },
    {
      "name": "RAILS_LOG_LEVEL",
      "value": "info"
    },
    {
      "name": "THINKING_SPHINX_ADDRESS",
      "value": "system-sphinx"
    },
    {
      "name": "THINKING_SPHINX_PORT",
      "value": "9306"
    },
    {
      "name": "THINKING_SPHINX_CONFIGURATION_FILE",
      "value": "/tmp/sphinx.conf"
    },
    {
      "name": "EVENTS_SHARED_SECRET",
      "value": "${SYSTEM_BACKEND_SHARED_SECRET}"
    },
    {
      "name": "THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE",
      "value": "VERIFY_NONE"
    },
    {
      "name": "APICAST_BACKEND_ROOT_ENDPOINT",
      "value": "https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"
    },
    {
      "name": "CONFIG_INTERNAL_API_USER",
      "value": "${SYSTEM_BACKEND_USERNAME}"
    },
    {
      "name": "CONFIG_INTERNAL_API_PASSWORD",
      "value": "${SYSTEM_BACKEND_PASSWORD}"
    },
    {
      "name": "SECRET_KEY_BASE",
      "value": "${SYSTEM_APP_SECRET_KEY_BASE}"
    },
    {
      "name": "ZYNC_AUTHENTICATION_TOKEN",
      "valueFrom": {
        "secretKeyRef": {
          "key": "ZYNC_AUTHENTICATION_TOKEN",
          "name": "zync"
        }
      }
    },
    {
      "name": "SMTP_ADDRESS",
      "valueFrom": {
        "configMapKeyRef": {
          "key": "address",
          "name": "smtp"
        }
      }
    },
    {
      "name": "SMTP_USER_NAME",
      "valueFrom": {
        "configMapKeyRef": {
          "key": "username",
          "name": "smtp"
        }
      }
    },
    {
      "name": "SMTP_PASSWORD",
      "valueFrom": {
        "configMapKeyRef": {
          "key": "password",
          "name": "smtp"
        }
      }
    },
    {
      "name": "SMTP_DOMAIN",
      "valueFrom": {
        "configMapKeyRef": {
          "key": "domain",
          "name": "smtp"
        }
      }
    },
    {
      "name": "SMTP_PORT",
      "valueFrom": {
        "configMapKeyRef": {
          "key": "port",
          "name": "smtp"
        }
      }
    },
    {
      "name": "SMTP_AUTHENTICATION",
      "valueFrom": {
        "configMapKeyRef": {
          "key": "authentication",
          "name": "smtp"
        }
      }
    },
    {
      "name": "SMTP_OPENSSL_VERIFY_MODE",
      "valueFrom": {
        "configMapKeyRef": {
          "key": "openssl.verify.mode",
          "name": "smtp"
        }
      }
    },
    {
      "name": "BACKEND_ROUTE",
      "value": "https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"
    },
    {
      "name": "SSL_CERT_DIR",
      "value": "/etc/pki/tls/certs"
    }
  ],
  "kind": "Template",
  "message": "Login on https://${TENANT_NAME}-admin.${WILDCARD_DOMAIN} as ${ADMIN_USERNAME}/${ADMIN_PASSWORD}",
  "metadata": {
    "name": "system"
  },
  "objects": [
    {
      "apiVersion": "v1",
      "kind": "ImageStream",
      "metadata": {
        "annotations": {
          "openshift.io/display-name": "AMP System"
        },
        "name": "amp-system"
      },
      "spec": {
        "tags": [
          {
            "annotations": {
              "openshift.io/display-name": "AMP System (latest)"
            },
            "from": {
              "kind": "ImageStreamTag",
              "name": "2.1.0-CR2-redhat-1"
            },
            "name": "latest"
          },
          {
            "annotations": {
              "openshift.io/display-name": "AMP system 2.1.0-CR2-redhat-1"
            },
            "from": {
              "kind": "DockerImage",
              "name": "registry.access.redhat.com/3scale-amp21/system:1.4-1"
            },
            "name": "2.1.0-CR2-redhat-1"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ImageStream",
      "metadata": {
        "annotations": {
          "openshift.io/display-name": "AMP backend"
        },
        "name": "amp-backend"
      },
      "spec": {
        "tags": [
          {
            "annotations": {
              "openshift.io/display-name": "amp-backend (latest)"
            },
            "from": {
              "kind": "ImageStreamTag",
              "name": "2.1.0-CR2-redhat-1"
            },
            "name": "latest"
          },
          {
            "annotations": {
              "openshift.io/display-name": "amp-backend 2.1.0-CR2-redhat-1"
            },
            "from": {
              "kind": "DockerImage",
              "name": "registry.access.redhat.com/3scale-amp21/backend:1.4-2"
            },
            "name": "2.1.0-CR2-redhat-1"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ImageStream",
      "metadata": {
        "annotations": {
          "openshift.io/display-name": "AMP APIcast"
        },
        "name": "amp-apicast"
      },
      "spec": {
        "tags": [
          {
            "annotations": {
              "openshift.io/display-name": "AMP APIcast (latest)"
            },
            "from": {
              "kind": "ImageStreamTag",
              "name": "2.1.0-CR2-redhat-1"
            },
            "name": "latest"
          },
          {
            "annotations": {
              "openshift.io/display-name": "AMP APIcast 2.1.0-CR2-redhat-1"
            },
            "from": {
              "kind": "DockerImage",
              "name": "registry.access.redhat.com/3scale-amp21/apicast-gateway:1.4-2"
            },
            "name": "2.1.0-CR2-redhat-1"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ImageStream",
      "metadata": {
        "annotations": {
          "openshift.io/display-name": "AMP APIcast Wildcard Router"
        },
        "name": "amp-wildcard-router"
      },
      "spec": {
        "tags": [
          {
            "annotations": {
              "openshift.io/display-name": "AMP APIcast Wildcard Router (latest)"
            },
            "from": {
              "kind": "ImageStreamTag",
              "name": "2.1.0-CR2-redhat-1"
            },
            "name": "latest"
          },
          {
            "annotations": {
              "openshift.io/display-name": "AMP APIcast Wildcard Router 2.1.0-CR2-redhat-1"
            },
            "from": {
              "kind": "DockerImage",
              "name": "registry.access.redhat.com/3scale-amp21/wildcard-router:1.4-2"
            },
            "name": "2.1.0-CR2-redhat-1"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ImageStream",
      "metadata": {
        "annotations": {
          "openshift.io/display-name": "AMP Zync"
        },
        "labels": {
          "app": "zync"
        },
        "name": "amp-zync"
      },
      "spec": {
        "tags": [
          {
            "annotations": {
              "openshift.io/display-name": "AMP Zync (latest)"
            },
            "from": {
              "kind": "ImageStreamTag",
              "name": "2.1.0-CR2-redhat-1"
            },
            "name": "latest"
          },
          {
            "annotations": {
              "openshift.io/display-name": "AMP Zync 2.1.0-CR2-redhat-1"
            },
            "from": {
              "kind": "DockerImage",
              "name": "registry.access.redhat.com/3scale-amp21/zync:1.4-1"
            },
            "name": "2.1.0-CR2-redhat-1"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "PersistentVolumeClaim",
      "metadata": {
        "name": "system-storage"
      },
      "spec": {
        "accessModes": [
          "ReadWriteMany"
        ],
        "resources": {
          "requests": {
            "storage": "100Mi"
          }
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "PersistentVolumeClaim",
      "metadata": {
        "name": "mysql-storage"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "1Gi"
          }
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "PersistentVolumeClaim",
      "metadata": {
        "name": "system-redis-storage"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "1Gi"
          }
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "PersistentVolumeClaim",
      "metadata": {
        "name": "backend-redis-storage"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "1Gi"
          }
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "backend-cron"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "name": "backend-cron"
        },
        "strategy": {
          "rollingParams": {
            "intervalSeconds": 1,
            "maxSurge": "25%",
            "maxUnavailable": "25%",
            "timeoutSeconds": 600,
            "updatePeriodSeconds": 1
          },
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "backend-cron"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "backend-cron"
                ],
                "env": [
                  {
                    "name": "CONFIG_REDIS_PROXY",
                    "value": "backend-redis:6379"
                  },
                  {
                    "name": "CONFIG_QUEUES_MASTER_NAME",
                    "value": "backend-redis:6379/1"
                  },
                  {
                    "name": "RACK_ENV",
                    "value": "production"
                  }
                ],
                "image": "amp-backend:latest",
                "imagePullPolicy": "Always",
                "name": "backend-cron"
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "backend-cron"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "amp-backend:latest"
              }
            },
            "type": "ImageChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "backend-redis"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "name": "backend-redis"
        },
        "strategy": {
          "type": "Recreate"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "backend-redis"
            }
          },
          "spec": {
            "containers": [
              {
                "image": "${REDIS_IMAGE}",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "initialDelaySeconds": 10,
                  "periodSeconds": 10,
                  "tcpSocket": {
                    "port": 6379
                  }
                },
                "name": "backend-redis",
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "container-entrypoint",
                      "bash",
                      "-c",
                      "redis-cli set liveness-probe \"`date`\" | grep OK"
                    ]
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 30,
                  "timeoutSeconds": 1
                },
                "volumeMounts": [
                  {
                    "mountPath": "/var/lib/redis/data",
                    "name": "backend-redis-storage"
                  },
                  {
                    "mountPath": "/etc/redis.conf",
                    "name": "redis-config",
                    "subPath": "redis.conf"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "backend-redis-storage",
                "persistentVolumeClaim": {
                  "claimName": "backend-redis-storage"
                }
              },
              {
                "configMap": {
                  "items": [
                    {
                      "key": "redis.conf",
                      "path": "redis.conf"
                    }
                  ],
                  "name": "redis-config"
                },
                "name": "redis-config"
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "backend-listener"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "name": "backend-listener"
        },
        "strategy": {
          "rollingParams": {
            "intervalSeconds": 1,
            "maxSurge": "25%",
            "maxUnavailable": "25%",
            "timeoutSeconds": 600,
            "updatePeriodSeconds": 1
          },
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "backend-listener"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "bin/3scale_backend",
                  "start",
                  "-e",
                  "production",
                  "-p",
                  "3000",
                  "-x",
                  "/dev/stdout"
                ],
                "env": [
                  {
                    "name": "CONFIG_REDIS_PROXY",
                    "value": "backend-redis:6379"
                  },
                  {
                    "name": "CONFIG_QUEUES_MASTER_NAME",
                    "value": "backend-redis:6379/1"
                  },
                  {
                    "name": "RACK_ENV",
                    "value": "production"
                  },
                  {
                    "name": "CONFIG_INTERNAL_API_USER",
                    "value": "${SYSTEM_BACKEND_USERNAME}"
                  },
                  {
                    "name": "CONFIG_INTERNAL_API_PASSWORD",
                    "value": "${SYSTEM_BACKEND_PASSWORD}"
                  }
                ],
                "image": "amp-backend:latest",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "initialDelaySeconds": 30,
                  "periodSeconds": 10,
                  "tcpSocket": {
                    "port": 3000
                  }
                },
                "name": "backend-listener",
                "ports": [
                  {
                    "containerPort": 3000,
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "httpGet": {
                    "path": "/status",
                    "port": 3000
                  },
                  "initialDelaySeconds": 30,
                  "timeoutSeconds": 5
                }
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "backend-listener"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "amp-backend:latest"
              }
            },
            "type": "ImageChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "backend-redis"
      },
      "spec": {
        "ports": [
          {
            "port": 6379,
            "protocol": "TCP",
            "targetPort": 6379
          }
        ],
        "selector": {
          "name": "backend-redis"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"backend-redis\", \"kind\": \"Service\"}]"
        },
        "name": "backend-listener"
      },
      "spec": {
        "ports": [
          {
            "name": "http",
            "port": 3000,
            "protocol": "TCP",
            "targetPort": 3000
          }
        ],
        "selector": {
          "name": "backend-listener"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"system-developer\", \"kind\": \"Service\"}]"
        },
        "name": "system-provider"
      },
      "spec": {
        "ports": [
          {
            "name": "http",
            "port": 3000,
            "protocol": "TCP",
            "targetPort": "provider"
          }
        ],
        "selector": {
          "name": "system-app"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "system-developer"
      },
      "spec": {
        "ports": [
          {
            "name": "http",
            "port": 3000,
            "protocol": "TCP",
            "targetPort": "developer"
          }
        ],
        "selector": {
          "name": "system-app"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "backend-worker"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "name": "backend-worker"
        },
        "strategy": {
          "rollingParams": {
            "intervalSeconds": 1,
            "maxSurge": "25%",
            "maxUnavailable": "25%",
            "timeoutSeconds": 600,
            "updatePeriodSeconds": 1
          },
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "backend-worker"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "bin/3scale_backend_worker",
                  "run"
                ],
                "env": [
                  {
                    "name": "CONFIG_REDIS_PROXY",
                    "value": "backend-redis:6379"
                  },
                  {
                    "name": "CONFIG_QUEUES_MASTER_NAME",
                    "value": "backend-redis:6379/1"
                  },
                  {
                    "name": "RACK_ENV",
                    "value": "production"
                  },
                  {
                    "name": "CONFIG_EVENTS_HOOK",
                    "value": "http://system-provider:3000/master/events/import"
                  },
                  {
                    "name": "CONFIG_EVENTS_HOOK_SHARED_SECRET",
                    "value": "${SYSTEM_BACKEND_SHARED_SECRET}"
                  }
                ],
                "image": "amp-backend:latest",
                "imagePullPolicy": "Always",
                "name": "backend-worker"
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "backend-worker"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "amp-backend:latest"
              }
            },
            "type": "ImageChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "system-mysql"
      },
      "spec": {
        "ports": [
          {
            "name": "system-mysql",
            "nodePort": 0,
            "port": 3306,
            "protocol": "TCP",
            "targetPort": 3306
          }
        ],
        "selector": {
          "name": "system-mysql"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "system-redis"
      },
      "spec": {
        "ports": [
          {
            "name": "redis",
            "port": 6379,
            "protocol": "TCP",
            "targetPort": 6379
          }
        ],
        "selector": {
          "name": "system-redis"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "system-redis"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "name": "system-redis"
        },
        "strategy": {
          "type": "Recreate"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "system-redis"
            }
          },
          "spec": {
            "containers": [
              {
                "args": null,
                "image": "${REDIS_IMAGE}",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5,
                  "tcpSocket": {
                    "port": 6379
                  }
                },
                "name": "system-redis",
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "container-entrypoint",
                      "bash",
                      "-c",
                      "redis-cli set liveness-probe \"`date`\" | grep OK"
                    ]
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 10,
                  "timeoutSeconds": 5
                },
                "terminationMessagePath": "/dev/termination-log",
                "volumeMounts": [
                  {
                    "mountPath": "/var/lib/redis/data",
                    "name": "system-redis-storage"
                  },
                  {
                    "mountPath": "/etc/redis.conf",
                    "name": "redis-config",
                    "subPath": "redis.conf"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "system-redis-storage",
                "persistentVolumeClaim": {
                  "claimName": "system-redis-storage"
                }
              },
              {
                "configMap": {
                  "items": [
                    {
                      "key": "redis.conf",
                      "path": "redis.conf"
                    }
                  ],
                  "name": "redis-config"
                },
                "name": "redis-config"
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "system-sphinx"
      },
      "spec": {
        "ports": [
          {
            "name": "sphinx",
            "port": 9306,
            "protocol": "TCP",
            "targetPort": 9306
          }
        ],
        "selector": {
          "name": "system-sphinx"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "system-sphinx"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "name": "system-sphinx"
        },
        "strategy": {
          "rollingParams": {
            "intervalSeconds": 1,
            "maxSurge": "25%",
            "maxUnavailable": "25%",
            "timeoutSeconds": 600,
            "updatePeriodSeconds": 1
          },
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "system-sphinx"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "rake",
                  "openshift:thinking_sphinx:start"
                ],
                "env": [
                  {
                    "name": "RAILS_ENV",
                    "value": "production"
                  },
                  {
                    "name": "DATABASE_URL",
                    "value": "mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"
                  },
                  {
                    "name": "THINKING_SPHINX_ADDRESS",
                    "value": "0.0.0.0"
                  },
                  {
                    "name": "THINKING_SPHINX_CONFIGURATION_FILE",
                    "value": "db/sphinx/production.conf"
                  },
                  {
                    "name": "THINKING_SPHINX_PID_FILE",
                    "value": "db/sphinx/searchd.pid"
                  },
                  {
                    "name": "DELTA_INDEX_INTERVAL",
                    "value": "5"
                  },
                  {
                    "name": "FULL_REINDEX_INTERVAL",
                    "value": "60"
                  }
                ],
                "image": "amp-system:latest",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "initialDelaySeconds": 60,
                  "periodSeconds": 10,
                  "tcpSocket": {
                    "port": 9306
                  }
                },
                "name": "system-sphinx",
                "volumeMounts": [
                  {
                    "mountPath": "/opt/system/db/sphinx",
                    "name": "system-sphinx-database"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "emptyDir": {},
                "name": "system-sphinx-database"
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "system-sphinx"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "amp-system:latest"
              }
            },
            "type": "ImageChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "system-memcache"
      },
      "spec": {
        "ports": [
          {
            "name": "memcache",
            "port": 11211,
            "protocol": "TCP",
            "targetPort": 11211
          }
        ],
        "selector": {
          "name": "system-memcache"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "system-memcache"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "name": "system-memcache"
        },
        "strategy": {
          "rollingParams": {
            "intervalSeconds": 1,
            "maxSurge": "25%",
            "maxUnavailable": "25%",
            "timeoutSeconds": 600,
            "updatePeriodSeconds": 1
          },
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "system-memcache"
            }
          },
          "spec": {
            "containers": [
              {
                "args": null,
                "command": [
                  "memcached",
                  "-m",
                  "64"
                ],
                "env": null,
                "image": "3scale-amp20/memcached:1.4.15-8",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "initialDelaySeconds": 10,
                  "periodSeconds": 10,
                  "tcpSocket": {
                    "port": 11211
                  }
                },
                "name": "memcache",
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "sh",
                      "-c",
                      "echo version | nc $HOSTNAME 11211 | grep VERSION"
                    ]
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 30,
                  "timeoutSeconds": 5
                }
              }
            ],
            "ports": [
              {
                "containerPort": 6379,
                "protocol": "TCP"
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Route",
      "metadata": {
        "labels": {
          "app": "system-route"
        },
        "name": "system-provider-admin-route"
      },
      "spec": {
        "host": "${TENANT_NAME}-admin.${WILDCARD_DOMAIN}",
        "port": {
          "targetPort": "http"
        },
        "tls": {
          "insecureEdgeTerminationPolicy": "Allow",
          "termination": "edge"
        },
        "to": {
          "kind": "Service",
          "name": "system-provider"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Route",
      "metadata": {
        "labels": {
          "app": "system-route"
        },
        "name": "backend-route"
      },
      "spec": {
        "host": "backend-${TENANT_NAME}.${WILDCARD_DOMAIN}",
        "port": {
          "targetPort": "http"
        },
        "tls": {
          "insecureEdgeTerminationPolicy": "Allow",
          "termination": "edge"
        },
        "to": {
          "kind": "Service",
          "name": "backend-listener"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Route",
      "metadata": {
        "labels": {
          "app": "system-route"
        },
        "name": "system-developer-route"
      },
      "spec": {
        "host": "${TENANT_NAME}.${WILDCARD_DOMAIN}",
        "port": {
          "targetPort": "http"
        },
        "tls": {
          "insecureEdgeTerminationPolicy": "Allow",
          "termination": "edge"
        },
        "to": {
          "kind": "Service",
          "name": "system-developer"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "apicast-staging"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "deploymentconfig": "apicast-staging"
        },
        "strategy": {
          "rollingParams": {
            "intervalSeconds": 1,
            "maxSurge": "25%",
            "maxUnavailable": "25%",
            "timeoutSeconds": 1800,
            "updatePeriodSeconds": 1
          },
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "deploymentconfig": "apicast-staging"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [
                  {
                    "name": "THREESCALE_PORTAL_ENDPOINT",
                    "value": "http://${APICAST_ACCESS_TOKEN}@system-provider:3000"
                  },
                  {
                    "name": "APICAST_CONFIGURATION_LOADER",
                    "value": "lazy"
                  },
                  {
                    "name": "APICAST_CONFIGURATION_CACHE",
                    "value": "0"
                  },
                  {
                    "name": "THREESCALE_DEPLOYMENT_ENV",
                    "value": "sandbox"
                  },
                  {
                    "name": "APICAST_MANAGEMENT_API",
                    "value": "${APICAST_MANAGEMENT_API}"
                  },
                  {
                    "name": "BACKEND_ENDPOINT_OVERRIDE",
                    "value": "http://backend-listener:3000"
                  },
                  {
                    "name": "OPENSSL_VERIFY",
                    "value": "${APICAST_OPENSSL_VERIFY}"
                  },
                  {
                    "name": "APICAST_RESPONSE_CODES",
                    "value": "${APICAST_RESPONSE_CODES}"
                  },
                  {
                    "name": "REDIS_URL",
                    "value": "redis://system-redis:6379/2"
                  }
                ],
                "image": "amp-apicast:latest",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "httpGet": {
                    "path": "/status/live",
                    "port": 8090
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 10,
                  "timeoutSeconds": 5
                },
                "name": "apicast-staging",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8090,
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "httpGet": {
                    "path": "/status/ready",
                    "port": 8090
                  },
                  "initialDelaySeconds": 15,
                  "periodSeconds": 30,
                  "timeoutSeconds": 5
                }
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "apicast-staging"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "amp-apicast:latest"
              }
            },
            "type": "ImageChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "apicast-staging"
      },
      "spec": {
        "ports": [
          {
            "name": "gateway",
            "port": 8080,
            "protocol": "TCP",
            "targetPort": 8080
          },
          {
            "name": "management",
            "port": 8090,
            "protocol": "TCP",
            "targetPort": 8090
          }
        ],
        "selector": {
          "deploymentconfig": "apicast-staging"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "apicast-production"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "deploymentconfig": "apicast-production"
        },
        "strategy": {
          "rollingParams": {
            "intervalSeconds": 1,
            "maxSurge": "25%",
            "maxUnavailable": "25%",
            "timeoutSeconds": 1800,
            "updatePeriodSeconds": 1
          },
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "deploymentconfig": "apicast-production"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [
                  {
                    "name": "THREESCALE_PORTAL_ENDPOINT",
                    "value": "http://${APICAST_ACCESS_TOKEN}@system-provider:3000"
                  },
                  {
                    "name": "APICAST_CONFIGURATION_LOADER",
                    "value": "boot"
                  },
                  {
                    "name": "APICAST_CONFIGURATION_CACHE",
                    "value": "300"
                  },
                  {
                    "name": "THREESCALE_DEPLOYMENT_ENV",
                    "value": "production"
                  },
                  {
                    "name": "APICAST_MANAGEMENT_API",
                    "value": "${APICAST_MANAGEMENT_API}"
                  },
                  {
                    "name": "BACKEND_ENDPOINT_OVERRIDE",
                    "value": "http://backend-listener:3000"
                  },
                  {
                    "name": "OPENSSL_VERIFY",
                    "value": "${APICAST_OPENSSL_VERIFY}"
                  },
                  {
                    "name": "APICAST_RESPONSE_CODES",
                    "value": "${APICAST_RESPONSE_CODES}"
                  },
                  {
                    "name": "REDIS_URL",
                    "value": "redis://system-redis:6379/1"
                  }
                ],
                "image": "amp-apicast:latest",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "httpGet": {
                    "path": "/status/live",
                    "port": 8090
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 10,
                  "timeoutSeconds": 5
                },
                "name": "apicast-production",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8090,
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "httpGet": {
                    "path": "/status/ready",
                    "port": 8090
                  },
                  "initialDelaySeconds": 15,
                  "periodSeconds": 30,
                  "timeoutSeconds": 5
                }
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "apicast-production"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "amp-apicast:latest"
              }
            },
            "type": "ImageChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"apicast-staging\", \"kind\": \"Service\"}]"
        },
        "name": "apicast-production"
      },
      "spec": {
        "ports": [
          {
            "name": "gateway",
            "port": 8080,
            "protocol": "TCP",
            "targetPort": 8080
          },
          {
            "name": "management",
            "port": 8090,
            "protocol": "TCP",
            "targetPort": 8090
          }
        ],
        "selector": {
          "deploymentconfig": "apicast-production"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Route",
      "metadata": {
        "labels": {
          "app": "apicast-staging"
        },
        "name": "api-apicast-staging-route"
      },
      "spec": {
        "host": "api-${TENANT_NAME}-apicast-staging.${WILDCARD_DOMAIN}",
        "port": {
          "targetPort": "gateway"
        },
        "tls": {
          "insecureEdgeTerminationPolicy": "Allow",
          "termination": "edge"
        },
        "to": {
          "kind": "Service",
          "name": "apicast-staging"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Route",
      "metadata": {
        "labels": {
          "app": "apicast-production"
        },
        "name": "api-apicast-production-route"
      },
      "spec": {
        "host": "api-${TENANT_NAME}-apicast-production.${WILDCARD_DOMAIN}",
        "port": {
          "targetPort": "gateway"
        },
        "tls": {
          "insecureEdgeTerminationPolicy": "Allow",
          "termination": "edge"
        },
        "to": {
          "kind": "Service",
          "name": "apicast-production"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "apicast-wildcard-router"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "deploymentconfig": "apicast-wildcard-router"
        },
        "strategy": {
          "rollingParams": {
            "intervalSeconds": 1,
            "maxSurge": "25%",
            "maxUnavailable": "25%",
            "timeoutSeconds": 1800,
            "updatePeriodSeconds": 1
          },
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "deploymentconfig": "apicast-wildcard-router"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [
                  {
                    "name": "API_HOST",
                    "value": "http://system-provider:3000"
                  },
                  {
                    "name": "ACCESS_TOKEN",
                    "value": "${APICAST_ACCESS_TOKEN}"
                  }
                ],
                "image": "amp-wildcard-router:latest",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "initialDelaySeconds": 30,
                  "periodSeconds": 10,
                  "tcpSocket": {
                    "port": "http"
                  }
                },
                "name": "apicast-wildcard-router",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http",
                    "protocol": "TCP"
                  }
                ]
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "apicast-wildcard-router"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "amp-wildcard-router:latest"
              }
            },
            "type": "ImageChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "apicast-wildcard-router"
      },
      "spec": {
        "ports": [
          {
            "name": "http",
            "port": 8080,
            "protocol": "TCP",
            "targetPort": "http"
          }
        ],
        "selector": {
          "deploymentconfig": "apicast-wildcard-router"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Route",
      "metadata": {
        "labels": {
          "app": "apicast-wildcard-router"
        },
        "name": "apicast-wildcard-router-route"
      },
      "spec": {
        "host": "${TENANT_NAME}-apicast-wildcard.${WILDCARD_DOMAIN}",
        "port": {
          "targetPort": "http"
        },
        "tls": {
          "insecureEdgeTerminationPolicy": "Allow",
          "termination": "edge"
        },
        "to": {
          "kind": "Service",
          "name": "apicast-wildcard-router"
        },
        "wildcardPolicy": "${WILDCARD_POLICY}"
      }
    },
    {
      "apiVersion": "v1",
      "data": {
        "rolling_updates.yml": "production:\n  old_charts: false\n  new_provider_documentation: false\n  proxy_pro: false\n  instant_bill_plan_change: false\n  service_permissions: true\n  async_apicast_deploy: false\n  duplicate_application_id: true\n  duplicate_user_key: true\n  plan_changes_wizard: false\n  require_cc_on_signup: false\n  apicast_per_service: true\n  new_notification_system: true\n  cms_api: false\n  apicast_v2: true\n  forum: false\n  published_service_plan_signup: true\n  apicast_oidc: true\n",
        "zync.yml": "production:\n  endpoint: 'http://zync:8080'\n  authentication:\n    token: \"<%= ENV.fetch('ZYNC_AUTHENTICATION_TOKEN') %>\"\n  connect_timeout: 5\n  send_timeout: 5\n  receive_timeout: 10\n  root_url: 'http://system-provider:3000'\n"
      },
      "kind": "ConfigMap",
      "metadata": {
        "name": "system"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "system-app"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "name": "system-app"
        },
        "strategy": {
          "rollingParams": {
            "intervalSeconds": 1,
            "maxSurge": "25%",
            "maxUnavailable": "25%",
            "post": {
              "execNewPod": {
                "command": [
                  "bash",
                  "-c",
                  "bundle exec rake boot openshift:post_deploy"
                ],
                "containerName": "system-provider"
              },
              "failurePolicy": "Abort"
            },
            "pre": {
              "execNewPod": {
                "command": [
                  "bash",
                  "-c",
                  "bundle exec rake boot openshift:deploy"
                ],
                "containerName": "system-provider",
                "env": [
                  {
                    "name": "RAILS_ENV",
                    "value": "production"
                  },
                  {
                    "name": "DATABASE_URL",
                    "value": "mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"
                  },
                  {
                    "name": "FORCE_SSL",
                    "value": "true"
                  },
                  {
                    "name": "THREESCALE_SUPERDOMAIN",
                    "value": "${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "TENANT_NAME",
                    "value": "${TENANT_NAME}"
                  },
                  {
                    "name": "APICAST_ACCESS_TOKEN",
                    "value": "${APICAST_ACCESS_TOKEN}"
                  },
                  {
                    "name": "ADMIN_ACCESS_TOKEN",
                    "value": "${ADMIN_ACCESS_TOKEN}"
                  },
                  {
                    "name": "PROVIDER_PLAN",
                    "value": "enterprise"
                  },
                  {
                    "name": "USER_LOGIN",
                    "value": "${ADMIN_USERNAME}"
                  },
                  {
                    "name": "USER_PASSWORD",
                    "value": "${ADMIN_PASSWORD}"
                  },
                  {
                    "name": "RAILS_LOG_TO_STDOUT",
                    "value": "true"
                  },
                  {
                    "name": "RAILS_LOG_LEVEL",
                    "value": "info"
                  },
                  {
                    "name": "THINKING_SPHINX_ADDRESS",
                    "value": "system-sphinx"
                  },
                  {
                    "name": "THINKING_SPHINX_PORT",
                    "value": "9306"
                  },
                  {
                    "name": "THINKING_SPHINX_CONFIGURATION_FILE",
                    "value": "/tmp/sphinx.conf"
                  },
                  {
                    "name": "EVENTS_SHARED_SECRET",
                    "value": "${SYSTEM_BACKEND_SHARED_SECRET}"
                  },
                  {
                    "name": "THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE",
                    "value": "VERIFY_NONE"
                  },
                  {
                    "name": "APICAST_BACKEND_ROOT_ENDPOINT",
                    "value": "https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "CONFIG_INTERNAL_API_USER",
                    "value": "${SYSTEM_BACKEND_USERNAME}"
                  },
                  {
                    "name": "CONFIG_INTERNAL_API_PASSWORD",
                    "value": "${SYSTEM_BACKEND_PASSWORD}"
                  },
                  {
                    "name": "SECRET_KEY_BASE",
                    "value": "${SYSTEM_APP_SECRET_KEY_BASE}"
                  },
                  {
                    "name": "ZYNC_AUTHENTICATION_TOKEN",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "ZYNC_AUTHENTICATION_TOKEN",
                        "name": "zync"
                      }
                    }
                  },
                  {
                    "name": "SMTP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "address",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_USER_NAME",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "username",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_PASSWORD",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "password",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_DOMAIN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "domain",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_PORT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "port",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_AUTHENTICATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "authentication",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_OPENSSL_VERIFY_MODE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "openssl.verify.mode",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "BACKEND_ROUTE",
                    "value": "https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "SSL_CERT_DIR",
                    "value": "/etc/pki/tls/certs"
                  }
                ],
                "volumes": [
                  "system-storage"
                ]
              },
              "failurePolicy": "Retry"
            },
            "timeoutSeconds": 600,
            "updatePeriodSeconds": 1
          },
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "system-app"
            }
          },
          "spec": {
            "containers": [
              {
                "args": null,
                "command": [
                  "env",
                  "TENANT_MODE=provider",
                  "PORT=3000",
                  "container-entrypoint",
                  "bundle",
                  "exec",
                  "unicorn",
                  "-c",
                  "config/unicorn.rb"
                ],
                "env": [
                  {
                    "name": "RAILS_ENV",
                    "value": "production"
                  },
                  {
                    "name": "DATABASE_URL",
                    "value": "mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"
                  },
                  {
                    "name": "FORCE_SSL",
                    "value": "true"
                  },
                  {
                    "name": "THREESCALE_SUPERDOMAIN",
                    "value": "${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "TENANT_NAME",
                    "value": "${TENANT_NAME}"
                  },
                  {
                    "name": "APICAST_ACCESS_TOKEN",
                    "value": "${APICAST_ACCESS_TOKEN}"
                  },
                  {
                    "name": "ADMIN_ACCESS_TOKEN",
                    "value": "${ADMIN_ACCESS_TOKEN}"
                  },
                  {
                    "name": "PROVIDER_PLAN",
                    "value": "enterprise"
                  },
                  {
                    "name": "USER_LOGIN",
                    "value": "${ADMIN_USERNAME}"
                  },
                  {
                    "name": "USER_PASSWORD",
                    "value": "${ADMIN_PASSWORD}"
                  },
                  {
                    "name": "RAILS_LOG_TO_STDOUT",
                    "value": "true"
                  },
                  {
                    "name": "RAILS_LOG_LEVEL",
                    "value": "info"
                  },
                  {
                    "name": "THINKING_SPHINX_ADDRESS",
                    "value": "system-sphinx"
                  },
                  {
                    "name": "THINKING_SPHINX_PORT",
                    "value": "9306"
                  },
                  {
                    "name": "THINKING_SPHINX_CONFIGURATION_FILE",
                    "value": "/tmp/sphinx.conf"
                  },
                  {
                    "name": "EVENTS_SHARED_SECRET",
                    "value": "${SYSTEM_BACKEND_SHARED_SECRET}"
                  },
                  {
                    "name": "THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE",
                    "value": "VERIFY_NONE"
                  },
                  {
                    "name": "APICAST_BACKEND_ROOT_ENDPOINT",
                    "value": "https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "CONFIG_INTERNAL_API_USER",
                    "value": "${SYSTEM_BACKEND_USERNAME}"
                  },
                  {
                    "name": "CONFIG_INTERNAL_API_PASSWORD",
                    "value": "${SYSTEM_BACKEND_PASSWORD}"
                  },
                  {
                    "name": "SECRET_KEY_BASE",
                    "value": "${SYSTEM_APP_SECRET_KEY_BASE}"
                  },
                  {
                    "name": "ZYNC_AUTHENTICATION_TOKEN",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "ZYNC_AUTHENTICATION_TOKEN",
                        "name": "zync"
                      }
                    }
                  },
                  {
                    "name": "SMTP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "address",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_USER_NAME",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "username",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_PASSWORD",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "password",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_DOMAIN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "domain",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_PORT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "port",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_AUTHENTICATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "authentication",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_OPENSSL_VERIFY_MODE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "openssl.verify.mode",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "BACKEND_ROUTE",
                    "value": "https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "SSL_CERT_DIR",
                    "value": "/etc/pki/tls/certs"
                  }
                ],
                "image": "amp-system:latest",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10,
                  "tcpSocket": {
                    "port": "provider"
                  },
                  "timeoutSeconds": 10
                },
                "name": "system-provider",
                "ports": [
                  {
                    "containerPort": 3000,
                    "name": "provider",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "X-Forwarded-Proto",
                        "value": "https"
                      }
                    ],
                    "path": "/check.txt",
                    "port": "provider",
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30,
                  "timeoutSeconds": 10
                },
                "volumeMounts": [
                  {
                    "mountPath": "/opt/system/public/system",
                    "name": "system-storage"
                  },
                  {
                    "mountPath": "/opt/system/config/zync.yml",
                    "name": "system-config",
                    "subPath": "zync.yml"
                  },
                  {
                    "mountPath": "/opt/system/config/rolling_updates.yml",
                    "name": "system-config",
                    "subPath": "rolling_updates.yml"
                  }
                ]
              },
              {
                "args": null,
                "command": [
                  "env",
                  "TENANT_MODE=developer",
                  "PORT=3001",
                  "container-entrypoint",
                  "bundle",
                  "exec",
                  "unicorn",
                  "-c",
                  "config/unicorn.rb"
                ],
                "env": [
                  {
                    "name": "RAILS_ENV",
                    "value": "production"
                  },
                  {
                    "name": "DATABASE_URL",
                    "value": "mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"
                  },
                  {
                    "name": "FORCE_SSL",
                    "value": "true"
                  },
                  {
                    "name": "THREESCALE_SUPERDOMAIN",
                    "value": "${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "TENANT_NAME",
                    "value": "${TENANT_NAME}"
                  },
                  {
                    "name": "APICAST_ACCESS_TOKEN",
                    "value": "${APICAST_ACCESS_TOKEN}"
                  },
                  {
                    "name": "ADMIN_ACCESS_TOKEN",
                    "value": "${ADMIN_ACCESS_TOKEN}"
                  },
                  {
                    "name": "PROVIDER_PLAN",
                    "value": "enterprise"
                  },
                  {
                    "name": "USER_LOGIN",
                    "value": "${ADMIN_USERNAME}"
                  },
                  {
                    "name": "USER_PASSWORD",
                    "value": "${ADMIN_PASSWORD}"
                  },
                  {
                    "name": "RAILS_LOG_TO_STDOUT",
                    "value": "true"
                  },
                  {
                    "name": "RAILS_LOG_LEVEL",
                    "value": "info"
                  },
                  {
                    "name": "THINKING_SPHINX_ADDRESS",
                    "value": "system-sphinx"
                  },
                  {
                    "name": "THINKING_SPHINX_PORT",
                    "value": "9306"
                  },
                  {
                    "name": "THINKING_SPHINX_CONFIGURATION_FILE",
                    "value": "/tmp/sphinx.conf"
                  },
                  {
                    "name": "EVENTS_SHARED_SECRET",
                    "value": "${SYSTEM_BACKEND_SHARED_SECRET}"
                  },
                  {
                    "name": "THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE",
                    "value": "VERIFY_NONE"
                  },
                  {
                    "name": "APICAST_BACKEND_ROOT_ENDPOINT",
                    "value": "https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "CONFIG_INTERNAL_API_USER",
                    "value": "${SYSTEM_BACKEND_USERNAME}"
                  },
                  {
                    "name": "CONFIG_INTERNAL_API_PASSWORD",
                    "value": "${SYSTEM_BACKEND_PASSWORD}"
                  },
                  {
                    "name": "SECRET_KEY_BASE",
                    "value": "${SYSTEM_APP_SECRET_KEY_BASE}"
                  },
                  {
                    "name": "ZYNC_AUTHENTICATION_TOKEN",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "ZYNC_AUTHENTICATION_TOKEN",
                        "name": "zync"
                      }
                    }
                  },
                  {
                    "name": "SMTP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "address",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_USER_NAME",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "username",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_PASSWORD",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "password",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_DOMAIN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "domain",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_PORT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "port",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_AUTHENTICATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "authentication",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_OPENSSL_VERIFY_MODE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "openssl.verify.mode",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "BACKEND_ROUTE",
                    "value": "https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "SSL_CERT_DIR",
                    "value": "/etc/pki/tls/certs"
                  }
                ],
                "image": "amp-system:latest",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10,
                  "tcpSocket": {
                    "port": "developer"
                  },
                  "timeoutSeconds": 10
                },
                "name": "system-developer",
                "ports": [
                  {
                    "containerPort": 3001,
                    "name": "developer",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "httpGet": {
                    "httpHeaders": [
                      {
                        "name": "X-Forwarded-Proto",
                        "value": "https"
                      }
                    ],
                    "path": "/check.txt",
                    "port": "developer",
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30,
                  "timeoutSeconds": 10
                },
                "volumeMounts": [
                  {
                    "mountPath": "/opt/system/public/system",
                    "name": "system-storage",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/opt/system/config/zync.yml",
                    "name": "system-config",
                    "subPath": "zync.yml"
                  },
                  {
                    "mountPath": "/opt/system/config/rolling_updates.yml",
                    "name": "system-config",
                    "subPath": "rolling_updates.yml"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "system-storage",
                "persistentVolumeClaim": {
                  "claimName": "system-storage"
                }
              },
              {
                "configMap": {
                  "items": [
                    {
                      "key": "zync.yml",
                      "path": "zync.yml"
                    },
                    {
                      "key": "rolling_updates.yml",
                      "path": "rolling_updates.yml"
                    }
                  ],
                  "name": "system"
                },
                "name": "system-config"
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "system-provider",
                "system-developer"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "amp-system:latest"
              }
            },
            "type": "ImageChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "system-resque"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "name": "system-resque"
        },
        "strategy": {
          "rollingParams": {
            "intervalSeconds": 1,
            "maxSurge": "25%",
            "maxUnavailable": "25%",
            "timeoutSeconds": 600,
            "updatePeriodSeconds": 1
          },
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "system-resque"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "rake",
                  "resque:work",
                  "QUEUE=*"
                ],
                "env": [
                  {
                    "name": "RAILS_ENV",
                    "value": "production"
                  },
                  {
                    "name": "DATABASE_URL",
                    "value": "mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"
                  },
                  {
                    "name": "FORCE_SSL",
                    "value": "true"
                  },
                  {
                    "name": "THREESCALE_SUPERDOMAIN",
                    "value": "${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "TENANT_NAME",
                    "value": "${TENANT_NAME}"
                  },
                  {
                    "name": "APICAST_ACCESS_TOKEN",
                    "value": "${APICAST_ACCESS_TOKEN}"
                  },
                  {
                    "name": "ADMIN_ACCESS_TOKEN",
                    "value": "${ADMIN_ACCESS_TOKEN}"
                  },
                  {
                    "name": "PROVIDER_PLAN",
                    "value": "enterprise"
                  },
                  {
                    "name": "USER_LOGIN",
                    "value": "${ADMIN_USERNAME}"
                  },
                  {
                    "name": "USER_PASSWORD",
                    "value": "${ADMIN_PASSWORD}"
                  },
                  {
                    "name": "RAILS_LOG_TO_STDOUT",
                    "value": "true"
                  },
                  {
                    "name": "RAILS_LOG_LEVEL",
                    "value": "info"
                  },
                  {
                    "name": "THINKING_SPHINX_ADDRESS",
                    "value": "system-sphinx"
                  },
                  {
                    "name": "THINKING_SPHINX_PORT",
                    "value": "9306"
                  },
                  {
                    "name": "THINKING_SPHINX_CONFIGURATION_FILE",
                    "value": "/tmp/sphinx.conf"
                  },
                  {
                    "name": "EVENTS_SHARED_SECRET",
                    "value": "${SYSTEM_BACKEND_SHARED_SECRET}"
                  },
                  {
                    "name": "THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE",
                    "value": "VERIFY_NONE"
                  },
                  {
                    "name": "APICAST_BACKEND_ROOT_ENDPOINT",
                    "value": "https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "CONFIG_INTERNAL_API_USER",
                    "value": "${SYSTEM_BACKEND_USERNAME}"
                  },
                  {
                    "name": "CONFIG_INTERNAL_API_PASSWORD",
                    "value": "${SYSTEM_BACKEND_PASSWORD}"
                  },
                  {
                    "name": "SECRET_KEY_BASE",
                    "value": "${SYSTEM_APP_SECRET_KEY_BASE}"
                  },
                  {
                    "name": "ZYNC_AUTHENTICATION_TOKEN",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "ZYNC_AUTHENTICATION_TOKEN",
                        "name": "zync"
                      }
                    }
                  },
                  {
                    "name": "SMTP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "address",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_USER_NAME",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "username",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_PASSWORD",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "password",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_DOMAIN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "domain",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_PORT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "port",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_AUTHENTICATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "authentication",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_OPENSSL_VERIFY_MODE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "openssl.verify.mode",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "BACKEND_ROUTE",
                    "value": "https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "SSL_CERT_DIR",
                    "value": "/etc/pki/tls/certs"
                  }
                ],
                "image": "amp-system:latest",
                "imagePullPolicy": "Always",
                "name": "system-resque",
                "volumeMounts": [
                  {
                    "mountPath": "/opt/system/public/system",
                    "name": "system-storage"
                  }
                ]
              },
              {
                "args": [
                  "rake",
                  "resque:scheduler",
                  "QUEUE=*"
                ],
                "env": [
                  {
                    "name": "RAILS_ENV",
                    "value": "production"
                  },
                  {
                    "name": "DATABASE_URL",
                    "value": "mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"
                  },
                  {
                    "name": "FORCE_SSL",
                    "value": "true"
                  },
                  {
                    "name": "THREESCALE_SUPERDOMAIN",
                    "value": "${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "TENANT_NAME",
                    "value": "${TENANT_NAME}"
                  },
                  {
                    "name": "APICAST_ACCESS_TOKEN",
                    "value": "${APICAST_ACCESS_TOKEN}"
                  },
                  {
                    "name": "ADMIN_ACCESS_TOKEN",
                    "value": "${ADMIN_ACCESS_TOKEN}"
                  },
                  {
                    "name": "PROVIDER_PLAN",
                    "value": "enterprise"
                  },
                  {
                    "name": "USER_LOGIN",
                    "value": "${ADMIN_USERNAME}"
                  },
                  {
                    "name": "USER_PASSWORD",
                    "value": "${ADMIN_PASSWORD}"
                  },
                  {
                    "name": "RAILS_LOG_TO_STDOUT",
                    "value": "true"
                  },
                  {
                    "name": "RAILS_LOG_LEVEL",
                    "value": "info"
                  },
                  {
                    "name": "THINKING_SPHINX_ADDRESS",
                    "value": "system-sphinx"
                  },
                  {
                    "name": "THINKING_SPHINX_PORT",
                    "value": "9306"
                  },
                  {
                    "name": "THINKING_SPHINX_CONFIGURATION_FILE",
                    "value": "/tmp/sphinx.conf"
                  },
                  {
                    "name": "EVENTS_SHARED_SECRET",
                    "value": "${SYSTEM_BACKEND_SHARED_SECRET}"
                  },
                  {
                    "name": "THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE",
                    "value": "VERIFY_NONE"
                  },
                  {
                    "name": "APICAST_BACKEND_ROOT_ENDPOINT",
                    "value": "https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "CONFIG_INTERNAL_API_USER",
                    "value": "${SYSTEM_BACKEND_USERNAME}"
                  },
                  {
                    "name": "CONFIG_INTERNAL_API_PASSWORD",
                    "value": "${SYSTEM_BACKEND_PASSWORD}"
                  },
                  {
                    "name": "SECRET_KEY_BASE",
                    "value": "${SYSTEM_APP_SECRET_KEY_BASE}"
                  },
                  {
                    "name": "ZYNC_AUTHENTICATION_TOKEN",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "ZYNC_AUTHENTICATION_TOKEN",
                        "name": "zync"
                      }
                    }
                  },
                  {
                    "name": "SMTP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "address",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_USER_NAME",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "username",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_PASSWORD",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "password",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_DOMAIN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "domain",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_PORT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "port",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_AUTHENTICATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "authentication",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_OPENSSL_VERIFY_MODE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "openssl.verify.mode",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "BACKEND_ROUTE",
                    "value": "https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "SSL_CERT_DIR",
                    "value": "/etc/pki/tls/certs"
                  }
                ],
                "image": "amp-system:latest",
                "imagePullPolicy": "Always",
                "name": "system-scheduler"
              }
            ],
            "volumes": [
              {
                "name": "system-storage",
                "persistentVolumeClaim": {
                  "claimName": "system-storage"
                }
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "system-scheduler",
                "system-resque"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "amp-system:latest"
              }
            },
            "type": "ImageChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "system-sidekiq"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "name": "system-sidekiq"
        },
        "strategy": {
          "rollingParams": {
            "intervalSeconds": 1,
            "maxSurge": "25%",
            "maxUnavailable": "25%",
            "timeoutSeconds": 600,
            "updatePeriodSeconds": 1
          },
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "system-sidekiq"
            }
          },
          "spec": {
            "containers": [
              {
                "args": [
                  "rake",
                  "sidekiq:worker"
                ],
                "env": [
                  {
                    "name": "RAILS_ENV",
                    "value": "production"
                  },
                  {
                    "name": "DATABASE_URL",
                    "value": "mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"
                  },
                  {
                    "name": "FORCE_SSL",
                    "value": "true"
                  },
                  {
                    "name": "THREESCALE_SUPERDOMAIN",
                    "value": "${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "TENANT_NAME",
                    "value": "${TENANT_NAME}"
                  },
                  {
                    "name": "APICAST_ACCESS_TOKEN",
                    "value": "${APICAST_ACCESS_TOKEN}"
                  },
                  {
                    "name": "ADMIN_ACCESS_TOKEN",
                    "value": "${ADMIN_ACCESS_TOKEN}"
                  },
                  {
                    "name": "PROVIDER_PLAN",
                    "value": "enterprise"
                  },
                  {
                    "name": "USER_LOGIN",
                    "value": "${ADMIN_USERNAME}"
                  },
                  {
                    "name": "USER_PASSWORD",
                    "value": "${ADMIN_PASSWORD}"
                  },
                  {
                    "name": "RAILS_LOG_TO_STDOUT",
                    "value": "true"
                  },
                  {
                    "name": "RAILS_LOG_LEVEL",
                    "value": "info"
                  },
                  {
                    "name": "THINKING_SPHINX_ADDRESS",
                    "value": "system-sphinx"
                  },
                  {
                    "name": "THINKING_SPHINX_PORT",
                    "value": "9306"
                  },
                  {
                    "name": "THINKING_SPHINX_CONFIGURATION_FILE",
                    "value": "/tmp/sphinx.conf"
                  },
                  {
                    "name": "EVENTS_SHARED_SECRET",
                    "value": "${SYSTEM_BACKEND_SHARED_SECRET}"
                  },
                  {
                    "name": "THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE",
                    "value": "VERIFY_NONE"
                  },
                  {
                    "name": "APICAST_BACKEND_ROOT_ENDPOINT",
                    "value": "https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "CONFIG_INTERNAL_API_USER",
                    "value": "${SYSTEM_BACKEND_USERNAME}"
                  },
                  {
                    "name": "CONFIG_INTERNAL_API_PASSWORD",
                    "value": "${SYSTEM_BACKEND_PASSWORD}"
                  },
                  {
                    "name": "SECRET_KEY_BASE",
                    "value": "${SYSTEM_APP_SECRET_KEY_BASE}"
                  },
                  {
                    "name": "ZYNC_AUTHENTICATION_TOKEN",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "ZYNC_AUTHENTICATION_TOKEN",
                        "name": "zync"
                      }
                    }
                  },
                  {
                    "name": "SMTP_ADDRESS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "address",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_USER_NAME",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "username",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_PASSWORD",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "password",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_DOMAIN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "domain",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_PORT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "port",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_AUTHENTICATION",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "authentication",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "SMTP_OPENSSL_VERIFY_MODE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "openssl.verify.mode",
                        "name": "smtp"
                      }
                    }
                  },
                  {
                    "name": "BACKEND_ROUTE",
                    "value": "https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"
                  },
                  {
                    "name": "SSL_CERT_DIR",
                    "value": "/etc/pki/tls/certs"
                  }
                ],
                "image": "amp-system:latest",
                "imagePullPolicy": "Always",
                "name": "system-sidekiq",
                "volumeMounts": [
                  {
                    "mountPath": "/opt/system/public/system",
                    "name": "system-storage"
                  },
                  {
                    "mountPath": "/opt/system/config/zync.yml",
                    "name": "system-config",
                    "subPath": "zync.yml"
                  },
                  {
                    "mountPath": "/opt/system/config/rolling_updates.yml",
                    "name": "system-config",
                    "subPath": "rolling_updates.yml"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "system-storage",
                "persistentVolumeClaim": {
                  "claimName": "system-storage"
                }
              },
              {
                "configMap": {
                  "items": [
                    {
                      "key": "zync.yml",
                      "path": "zync.yml"
                    },
                    {
                      "key": "rolling_updates.yml",
                      "path": "rolling_updates.yml"
                    }
                  ],
                  "name": "system"
                },
                "name": "system-config"
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "system-sidekiq"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "amp-system:latest"
              }
            },
            "type": "ImageChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "system-mysql"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "name": "system-mysql"
        },
        "strategy": {
          "type": "Recreate"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "system-mysql"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [
                  {
                    "name": "MYSQL_USER",
                    "value": "${MYSQL_USER}"
                  },
                  {
                    "name": "MYSQL_PASSWORD",
                    "value": "${MYSQL_PASSWORD}"
                  },
                  {
                    "name": "MYSQL_DATABASE",
                    "value": "${MYSQL_DATABASE}"
                  },
                  {
                    "name": "MYSQL_ROOT_PASSWORD",
                    "value": "${MYSQL_ROOT_PASSWORD}"
                  },
                  {
                    "name": "MYSQL_LOWER_CASE_TABLE_NAMES",
                    "value": "1"
                  }
                ],
                "image": "${MYSQL_IMAGE}",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "initialDelaySeconds": 30,
                  "periodSeconds": 10,
                  "tcpSocket": {
                    "port": 3306
                  }
                },
                "name": "system-mysql",
                "ports": [
                  {
                    "containerPort": 3306,
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "/bin/sh",
                      "-i",
                      "-c",
                      "MYSQL_PWD=\"$MYSQL_PASSWORD\" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e 'SELECT 1'"
                    ]
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 30,
                  "timeoutSeconds": 5
                },
                "volumeMounts": [
                  {
                    "mountPath": "/var/lib/mysql/data",
                    "name": "mysql-storage"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "mysql-storage",
                "persistentVolumeClaim": {
                  "claimName": "mysql-storage"
                }
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "data": {
        "redis.conf": "protected-mode no\n\nport 6379\n\ntimeout 0\ntcp-keepalive 300\n\ndaemonize no\nsupervised no\n\nloglevel notice\n\ndatabases 16\n\nsave 900 1\nsave 300 10\nsave 60 10000\n\nstop-writes-on-bgsave-error yes\n\nrdbcompression yes\nrdbchecksum yes\n\ndbfilename dump.rdb\n\nslave-serve-stale-data yes\nslave-read-only yes\n\nrepl-diskless-sync no\nrepl-disable-tcp-nodelay no\n\nappendonly yes\nappendfilename \"appendonly.aof\"\nappendfsync everysec\nno-appendfsync-on-rewrite no\nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\naof-load-truncated yes\n\nlua-time-limit 5000\n\nactiverehashing no\n\naof-rewrite-incremental-fsync yes\ndir /var/lib/redis/data\n"
      },
      "kind": "ConfigMap",
      "metadata": {
        "name": "redis-config"
      }
    },
    {
      "apiVersion": "v1",
      "data": {
        "address": "",
        "authentication": "",
        "domain": "",
        "openssl.verify.mode": "",
        "password": "",
        "port": "",
        "username": ""
      },
      "kind": "ConfigMap",
      "metadata": {
        "name": "smtp"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ImageStream",
      "metadata": {
        "name": "postgresql"
      },
      "spec": {
        "tags": [
          {
            "from": {
              "kind": "DockerImage",
              "name": "registry.access.redhat.com/rhscl/postgresql-95-rhel7:9.5"
            },
            "name": "9.5"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Secret",
      "metadata": {
        "name": "zync"
      },
      "stringData": {
        "DATABASE_URL": "postgresql://zync:${ZYNC_DATABASE_PASSWORD}@zync-database:5432/zync_production",
        "SECRET_KEY_BASE": "${ZYNC_SECRET_KEY_BASE}",
        "ZYNC_AUTHENTICATION_TOKEN": "${ZYNC_AUTHENTICATION_TOKEN}",
        "ZYNC_DATABASE_PASSWORD": "${ZYNC_DATABASE_PASSWORD}"
      },
      "type": "Opaque"
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "annotations": null,
        "labels": {
          "app": "zync"
        },
        "name": "zync"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "app": "zync",
          "deploymentconfig": "zync"
        },
        "template": {
          "metadata": {
            "annotations": null,
            "labels": {
              "app": "zync",
              "deploymentconfig": "zync"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [
                  {
                    "name": "RAILS_LOG_TO_STDOUT",
                    "value": "true"
                  },
                  {
                    "name": "RAILS_ENV",
                    "value": "production"
                  },
                  {
                    "name": "DATABASE_URL",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "DATABASE_URL",
                        "name": "zync"
                      }
                    }
                  },
                  {
                    "name": "SECRET_KEY_BASE",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "SECRET_KEY_BASE",
                        "name": "zync"
                      }
                    }
                  },
                  {
                    "name": "ZYNC_AUTHENTICATION_TOKEN",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "ZYNC_AUTHENTICATION_TOKEN",
                        "name": "zync"
                      }
                    }
                  }
                ],
                "image": " ",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/status/live",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 60
                },
                "name": "zync",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/status/ready",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 10
                }
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "zync"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "amp-zync:latest"
              }
            },
            "type": "ImageChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"zync-database\", \"kind\": \"Service\"}]"
        },
        "labels": {
          "app": "zync"
        },
        "name": "zync"
      },
      "spec": {
        "ports": [
          {
            "name": "8080-tcp",
            "port": 8080,
            "protocol": "TCP",
            "targetPort": 8080
          }
        ],
        "selector": {
          "app": "zync",
          "deploymentconfig": "zync"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "zync-database"
      },
      "spec": {
        "ports": [
          {
            "name": "postgresql",
            "nodePort": 0,
            "port": 5432,
            "protocol": "TCP",
            "targetPort": 5432
          }
        ],
        "selector": {
          "name": "zync-database"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "zync-database"
      },
      "spec": {
        "paused": true,
        "replicas": 1,
        "selector": {
          "name": "zync-database"
        },
        "strategy": {
          "type": "Recreate"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "zync-database"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [
                  {
                    "name": "POSTGRESQL_USER",
                    "value": "zync"
                  },
                  {
                    "name": "POSTGRESQL_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "key": "ZYNC_DATABASE_PASSWORD",
                        "name": "zync"
                      }
                    }
                  },
                  {
                    "name": "POSTGRESQL_DATABASE",
                    "value": "zync_production"
                  }
                ],
                "image": " ",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "initialDelaySeconds": 30,
                  "tcpSocket": {
                    "port": 5432
                  },
                  "timeoutSeconds": 1
                },
                "name": "postgresql",
                "ports": [
                  {
                    "containerPort": 5432,
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "/bin/sh",
                      "-i",
                      "-c",
                      "psql -h 127.0.0.1 -U zync -q -d zync_production -c 'SELECT 1'"
                    ]
                  },
                  "initialDelaySeconds": 5,
                  "timeoutSeconds": 1
                },
                "volumeMounts": [
                  {
                    "mountPath": "/var/lib/pgsql/data",
                    "name": "zync-database-data"
                  }
                ]
              }
            ],
            "restartPolicy": "Always",
            "volumes": [
              {
                "emptyDir": {
                  "medium": ""
                },
                "name": "zync-database-data"
              }
            ]
          }
        },
        "triggers": [
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "postgresql"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "postgresql:9.5"
              }
            },
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          }
        ]
      }
    }
  ],
  "parameters": [
    {
      "description": "Password for the PostgreSQL connection user.",
      "displayName": "PostgreSQL Connection Password",
      "from": "[a-zA-Z0-9]{16}",
      "generate": "expression",
      "name": "ZYNC_DATABASE_PASSWORD",
      "required": true
    },
    {
      "from": "[a-zA-Z0-9]{16}",
      "generate": "expression",
      "name": "ZYNC_SECRET_KEY_BASE",
      "required": true
    },
    {
      "from": "[a-zA-Z0-9]{16}",
      "generate": "expression",
      "name": "ZYNC_AUTHENTICATION_TOKEN",
      "required": true
    },
    {
      "from": "[a-z0-9]{8}",
      "generate": "expression",
      "name": "ADMIN_PASSWORD",
      "required": true
    },
    {
      "name": "ADMIN_USERNAME",
      "required": true,
      "value": "admin"
    },
    {
      "description": "Read Only Access Token that is APIcast going to use to download its configuration.",
      "from": "[a-z0-9]{8}",
      "generate": "expression",
      "name": "APICAST_ACCESS_TOKEN",
      "required": true
    },
    {
      "description": "Admin Access Token with all scopes and write permissions for API access.",
      "from": "[a-z0-9]{16}",
      "generate": "expression",
      "name": "ADMIN_ACCESS_TOKEN",
      "required": false
    },
    {
      "description": "Root domain for the wildcard routes. Eg. example.com will generate 3scale-admin.example.com.",
      "name": "WILDCARD_DOMAIN",
      "required": true
    },
    {
      "description": "Use \"Subdomain\" to create a wildcard route for apicast wildcard router",
      "name": "WILDCARD_POLICY",
      "required": true,
      "value": "None"
    },
    {
      "description": "Tenant name under the root that Admin UI will be available with -admin suffix.",
      "name": "TENANT_NAME",
      "required": true,
      "value": "3scale"
    },
    {
      "description": "Username for MySQL user that will be used for accessing the database.",
      "displayName": "MySQL User",
      "name": "MYSQL_USER",
      "required": true,
      "value": "mysql"
    },
    {
      "description": "Password for the MySQL user.",
      "displayName": "MySQL Password",
      "from": "[a-z0-9]{8}",
      "generate": "expression",
      "name": "MYSQL_PASSWORD",
      "required": true
    },
    {
      "description": "Name of the MySQL database accessed.",
      "displayName": "MySQL Database Name",
      "name": "MYSQL_DATABASE",
      "required": true,
      "value": "system"
    },
    {
      "description": "Password for Root user.",
      "displayName": "MySQL Root password.",
      "from": "[a-z0-9]{8}",
      "generate": "expression",
      "name": "MYSQL_ROOT_PASSWORD",
      "required": true
    },
    {
      "description": "Internal 3scale API username for internal 3scale api auth.",
      "name": "SYSTEM_BACKEND_USERNAME",
      "required": true,
      "value": "3scale_api_user"
    },
    {
      "description": "Internal 3scale API password for internal 3scale api auth.",
      "from": "[a-z0-9]{8}",
      "generate": "expression",
      "name": "SYSTEM_BACKEND_PASSWORD",
      "required": true
    },
    {
      "description": "Redis image to use",
      "name": "REDIS_IMAGE",
      "required": true,
      "value": "rhscl/redis-32-rhel7:3.2"
    },
    {
      "description": "Mysql image to use",
      "name": "MYSQL_IMAGE",
      "required": true,
      "value": "rhscl/mysql-56-rhel7:5.6"
    },
    {
      "description": "Shared secret to import events from backend to system.",
      "from": "[a-z0-9]{8}",
      "generate": "expression",
      "name": "SYSTEM_BACKEND_SHARED_SECRET",
      "required": true
    },
    {
      "description": "System application secret key base",
      "from": "[a-f0-9]{128}",
      "generate": "expression",
      "name": "SYSTEM_APP_SECRET_KEY_BASE",
      "required": true
    },
    {
      "description": "Scope of the APIcast Management API. Can be disabled, status or debug. At least status required for health checks.",
      "name": "APICAST_MANAGEMENT_API",
      "required": false,
      "value": "status"
    },
    {
      "description": "Turn on/off the OpenSSL peer verification when downloading the configuration. Can be set to true/false.",
      "name": "APICAST_OPENSSL_VERIFY",
      "required": false,
      "value": "false"
    },
    {
      "description": "Enable logging response codes in APIcast.",
      "name": "APICAST_RESPONSE_CODES",
      "required": false,
      "value": "true"
    }
  ]
}
